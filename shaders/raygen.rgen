#version 460
#extension GL_EXT_ray_tracing : require

layout(binding = 0, set = 0, rgba8) uniform writeonly image2D storageImage;

layout(location = 0) rayPayloadEXT vec3 hitValue;

void main() 
{
    const vec2 pixelCenter = vec2(gl_LaunchIDEXT.xy) + vec2(0.5);
    const vec2 inUV = pixelCenter/vec2(gl_LaunchSizeEXT.xy);
    
    // Para o primeiro frame, vamos apenas criar um gradiente simples
    vec3 color = vec3(inUV, 0.5);
    
    // Comentado por enquanto at√© termos acceleration structure
    /*
    vec2 d = inUV * 2.0 - 1.0;
    vec4 origin = vec4(0,0,0,1);
    vec4 target = vec4(d.x, d.y, 1, 1);
    vec4 direction = vec4(normalize(target.xyz - origin.xyz), 0);

    traceRayEXT(
        accelerationStructureEXT(0),  // acceleration structure vazia
        gl_RayFlagsOpaqueEXT,  // rayFlags
        0xff,           // cullMask
        0,              // sbtRecordOffset
        0,              // sbtRecordStride
        0,              // missIndex
        origin.xyz,     // ray origin
        0.001,          // ray min range
        direction.xyz,  // ray direction
        10000.0,        // ray max range
        0               // payload (location = 0)
    );
    */

    imageStore(storageImage, ivec2(gl_LaunchIDEXT.xy), vec4(color, 1.0));
}
